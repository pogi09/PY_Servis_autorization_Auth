from flask import Flask, request
from opentelemetry import trace
from opentelemetry.exporter.jaeger.thrift import JaegerExporter
from opentelemetry.sdk.resources import Resource
from opentelemetry.sdk.trace import TracerProvider
from opentelemetry.sdk.trace.export import BatchSpanProcessor
from opentelemetry.instrumentation.flask import FlaskInstrumentor
import requests

app = Flask(__name__)

# Настройка Jaeger
trace.set_tracer_provider(TracerProvider(resource=Resource.create({"service.name": "storage-service"})))
jaeger_exporter = JaegerExporter(agent_host_name="localhost", agent_port=6831)
trace.get_tracer_provider().add_span_processor(BatchSpanProcessor(jaeger_exporter))
tracer = trace.get_tracer(__name__)
FlaskInstrumentor().instrument_app(app)

@app.route('/storage', methods=['GET'])
def storage():
    with tracer.start_as_current_span("storage-get"):
        username = request.args.get('username')
        # Проверка кэша
        cache_response = requests.get('http://localhost:5003/cache', params={'key': username})
        if cache_response.status_code == 200:
            return cache_response.json(), 200
        # Заглушка для данных
        data = {"username": username, "profile": {"name": "Test User", "email": f"{username}@example.com"}}
        # Сохраняем в кэш
        requests.post('http://localhost:5003/cache', json={'key': username, 'value': data})
        return data, 200

if __name__ == '__main__':
    app.run(port=5002)