services:
  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: jaeger
    restart: always
    environment:
      - COLLECTOR_ZIPKIN_HOST_PORT=:9411
      - COLLECTOR_OTLP_ENABLED=true
    ports:
      - "5775:5775/udp"
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"
      - "16686:16686"
      - "14268:14268"
      - "14250:14250"
      - "9411:9411"
      - "4317:4317"
      - "4318:4318"
    networks:
      - microservices-net
  redis:
    image: redis:latest
    container_name: redis
    restart: always
    ports:
      - "6380:6379"
    networks:
      - microservices-net
  gateway:
    build:
      context: .  # Контекст — корень проекта
      dockerfile: gateway/Dockerfile  # Путь к Dockerfile
    container_name: gateway
    ports:
      - "8080:8080"
    networks:
      - microservices-net
    depends_on:
      - jaeger
      - auth-service
      - storage-service
  auth-service:
    build:
      context: .  # Контекст — корень проекта
      dockerfile: auth_service/Dockerfile  # Путь к Dockerfile
    container_name: auth-service
    ports:
      - "5001:5001"
    networks:
      - microservices-net
    depends_on:
      - jaeger
  storage-service:
    build:
      context: .  # Контекст — корень проекта
      dockerfile: storage_service/Dockerfile  # Путь к Dockerfile
    container_name: storage-service
    ports:
      - "5002:5002"
    networks:
      - microservices-net
    depends_on:
      - jaeger
      - cache-service
  cache-service:
    build:
      context: .  # Контекст — корень проекта
      dockerfile: cache_service/Dockerfile  # Путь к Dockerfile
    container_name: cache-service
    ports:
      - "5003:5003"
    networks:
      - microservices-net
    depends_on:
      - jaeger
      - redis
networks:
  microservices-net:
    driver: bridge
# Если что-то не работает, проверьте логи:
#docker logs jaeger
#docker logs redis
redis:
  healthcheck:
    test: ["CMD", "redis-cli", "ping"]
    interval: 10s
    timeout: 5s
    retries: 3
jaeger:
  healthcheck:
    test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:16686"]
    interval: 10s
    timeout: 5s
    retries: 3